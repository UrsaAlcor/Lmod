Bootstrap: docker
From: alpine:3.14.2
Stage: setup


%setup
test -d .git # Assert we are building from the Git root directory.
cp -a ./lmod/recipes/buildroot "${SINGULARITY_ROOTFS}/opt/buildroot"
mkdir -p     "${SINGULARITY_ROOTFS}/opt/Alcor"
tar -cf - --exclude=./lmod/recipes --exclude="*.sif" --exclude="build-temp-*" . | \
tar -xf - -C "${SINGULARITY_ROOTFS}/opt/Alcor"
cd           "${SINGULARITY_ROOTFS}/opt/Alcor"
git clean -xdff


%post
#
# Install packages for a decent BuildRoot bootstrap, plus a few select
# utilities for debugging, plus dependencies for Lua/Lmod build.
#
apk update  -U
apk upgrade -U --available
apk add     -U alpine-sdk git coreutils findutils ncurses-dev strace nano \
               file patch less grep perl rsync bash zsh tcsh fish procps \
               libtool autoconf automake groff bsd-compat-headers \
               linux-headers util-linux python3 meson
git config --global advice.detachedHead false


# Build & install static Lua
cd /opt/Alcor
meson subprojects download
for BUILDROOT in /opt/buildroot/*; do
  # Create Buildroot cross-toolchain in $BUILDROOT
  cd "${BUILDROOT}"
  make -C /opt/Alcor/subprojects/buildroot-2021.08 V=1 O=$(pwd)
  
  # Build using cross-toolchain in $BUILDROOT
  (
  export PATH="$(pwd)/host/bin:$PATH"
  meson setup -Dprefix=/opt/lua/bin  \
              -Dbindir=''            \
              -Dbuildtype=minsize    \
              -Db_staticpic=false    \
              -Db_ndebug=true        \
              -Db_lto=true           \
              build /opt/Alcor       \
              --cross alpine-linux.cross
  meson compile -C build
  meson install -C build
  rm -Rf build
  )
done


Bootstrap: docker
From: alpine:3.14.2
Stage: final


%files from setup
/opt/lua/bin/lua*  /opt
